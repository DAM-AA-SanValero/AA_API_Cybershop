openapi: 3.0.1
servers:
  - url: /cybershop-api
info:
  title: Cybershop
  description: API para la venta de productos tecnológicos.
  version: 1.0.0
tags:
  - name: client
    description: Gestión de clientes
  - name: discount
    description: Operaciones para realizar con descuentos
  - name: product
    description: Operaciones para realizar con productos
  - name: repair
    description: Gestión de reparaciones
  - name: technician
    description: Gestión de técnicos
paths:
  /clients:
    get:
      tags:
        - client
      summary: Listado de clientes.
      description: Obtiene la información de todos los clientes almacenados en la base de datos.
      parameters:
        - name: vip
          in: query
          description: El cliente es VIP
          required: false
          schema:
            type: boolean

      responses:
        '200':
          description: Se obtiene una respuesta correcta con los clientes listados (OK)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /clients/{id}:
    get:
      tags:
        - client
      operationId: getId
      summary: Muestra un cliente.
      description: Se obtiene un cliente indicando su ID registrado en la Base de Datos.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
            format: int64
          examples:
            Ejemplo1:
              value: 4
      responses:
        '200':
          description: Se obtiene una respuesta correcta con el cliente mostrado (OK)
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Client'
        '404':
          description: No se ha encontrado el cliente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFound'
              example:
                EntityNotFound: 2
                message: "No se ha encontrado el cliente"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    post:
      tags:
        - client
      operationId: addClient
      summary: Resgistro de un nuevo cliente
      description: Se registra un nuevo cliente a la base de datos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
            example:
              Ejemplo1:
                value:
                  name: Alejandra
                  surname: Campo
                  number: 768987323
                  register_date: '2023-02-19'
                  vip: true
        required: true
      responses:
        '201':
          description: El cliente se ha registrado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Faltan campos obligatorios o hay un error en el formato de entrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    put:
      tags:
        - client
      operationId: modifyClient
      summary: Modifica los datos de un cliente
      description: Modifica los datos de un cliente por medio de un ID
      parameters:
      - name: id
        in: path
        schema:
          type: number
          format: int64
        examples:
          ejemplo1:
            value: 1
        required: true
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '200':
          description: El cliente se ha modificado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
        '400':
          description: Faltan campos obligatorios o hay un error en el formato de entrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: No se ha encontrado el cliente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFound'
              example:
                EntityNotFound: 2
                message: "No se ha encontrado el cliente"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    delete:
      tags:
        - client
      operationId: deleteClient
      summary: Eliminar un cliente
      description: Eliminar un cliente a partir de un ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
            format: int64
          examples:
            Ejemplo1:
              value: 6
      responses:
        '204':
          description: Cliente eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoContent'
        '404':
          description: No se ha encontrado el cliente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityNotFound'
              example:
                EntityNotFound: 2
                message: "No se ha podido encontrar el cliente"
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

components:
  schemas:
    Client:
      required:

        - name
        - surname
        - number
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 12
        name:
          type: string
          description: Nombre del cliente
          example: "Joserra"
        surname:
          type: string
          description: Apellido del cliente
          example: "Gimeno"
        number:
          type: number
          format: int32
          description: Número de teléfono del cliente
          example: 666666666
        registerDate:
          type: string
          format: date
          description: Fecha de registro del cliente
          example: "2021-02-28"
        vip:
          type: boolean
          description: Indicar si un cliente es VIP o no lo es
          example: true

    NoContent:
      description: Eliminado pero no aparece el contenido eliminado
      example:
        "No se muestra nada porque el registro se ha borrado"

    ErrorResponse:
      properties:
        internalError:
          type: number
          format: int32
        message:
          type: string
      type: object

    BadRequest:
      properties:
        campo:
          type: string
      type: object
      example:
        campo: "Este campo no puede estar vacio"

    EntityNotFound:
        allOf:
          - type: object
          - $ref: '#/components/schemas/ErrorResponse'
        example:
          internalError: 2
          message: "Entity not Found"

    InternalServerError:
        allOf:
          - type: object
          - $ref: '#/components/schemas/ErrorResponse'
        example:
          internalError: 500
          message: "Internal Server Error"








